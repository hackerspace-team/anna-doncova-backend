import pytz
from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message
from telegram import constants

from AnnaDoncovaBot.config import config
from AnnaDoncovaBot.features.application import get_applications
from AnnaDoncovaBot.features.enrollment import get_enrollments
from AnnaDoncovaBot.features.mini_course import get_mini_courses
from AnnaDoncovaBot.models.enrollment import PaymentType, PaymentMethod

common_router = Router()


@common_router.message(Command("applications"))
async def applications(message: Message):
    is_admin = str(message.chat.id) in config.ADMIN_CHAT_IDS
    if is_admin:
        await message.bot.send_chat_action(chat_id=message.chat.id, action=constants.ChatAction.TYPING)

        list_of_applications = await get_applications()
        for application in list_of_applications:
            created_at_pst = (application.created_date
                              .astimezone(pytz.timezone('America/Los_Angeles'))
                              .strftime('%d.%m.%Y %H:%M'))
            text = (f"#application\n\n"
                    f"üöÄ <b>–ó–∞–ø–∏—Å—å –Ω–∞ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –ø–æ –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º!</b>\n\n"
                    f"‚ÑπÔ∏è ID: {application.id}\n"
                    f"üë§ –ò–º—è: {application.name}\n"
                    f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {application.phone}\n"
                    f"üìß –ü–æ—á—Ç–∞: {application.email}\n"
                    f"‚úàÔ∏è –¢–µ–ª–µ–≥—Ä–∞–º: {application.telegram if application.telegram else '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
                    f"üß† –î–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {'–ù–µ —É–∫–∞–∑–∞–Ω–∞' if len(application.activities) == 0 else ', '.join(application.activities)}\n\n"
                    f"üìÑ –§–æ—Ä–º–∞: –ü—Ä–µ–¥–∑–∞–ø–∏—Å—å\n"
                    f"üóì –î–∞—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ PST: {created_at_pst}")
            await message.answer(text=text)


@common_router.message(Command("enrollments"))
async def enrollments(message: Message):
    is_admin = str(message.chat.id) in config.ADMIN_CHAT_IDS
    if is_admin:
        await message.bot.send_chat_action(chat_id=message.chat.id, action=constants.ChatAction.TYPING)

        list_of_enrollments = await get_enrollments()
        for enrollment in list_of_enrollments:
            created_at_pst = (enrollment.created_date
                              .astimezone(pytz.timezone('America/Los_Angeles'))
                              .strftime('%d.%m.%Y %H:%M'))
            text = (f"#enrollment\n\n"
                    f"üöÄ <b>–ö–ª–∏–µ–Ω—Ç –Ω–∞ –∫—É—Ä—Å–∞—Ö –ø–æ –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º!</b>\n\n"
                    f"‚ÑπÔ∏è ID: {enrollment.id}\n"
                    f"üë§ –ò–º—è: {enrollment.name}\n"
                    f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {enrollment.phone}\n"
                    f"üìß –ü–æ—á—Ç–∞: {enrollment.email}\n"
                    f"‚úàÔ∏è –¢–µ–ª–µ–≥—Ä–∞–º: {enrollment.telegram if enrollment.telegram else '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
                    f"üß† –î–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {enrollment.activity if enrollment.activity else '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}\n"
                    f"‚≠ê –¢–∞—Ä–∏—Ñ: {enrollment.tariff}\n"
                    f"üè¶ –ü—Ä–µ–¥–æ–ø–ª–∞—Ç–∞: {'–î–∞' if enrollment.payment_type == PaymentType.PREPAYMENT else '–ù–µ—Ç'}\n"
                    f"üí± –ú–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã: {'PayPal' if enrollment.payment_method == PaymentMethod.PAYPAL else '–ÆKassa'}\n"
                    f"üí∏ –°—É–º–º–∞: {enrollment.amount}{'$' if enrollment.payment_method == PaymentMethod.PAYPAL else '‚ÇΩ'}\n"
                    f"ü§ë –ß–∏—Å—Ç–∞—è —Å—É–º–º–∞: {enrollment.income_amount}‚ÇΩ\n"
                    f"üëÅ –°—Ç–∞—Ç—É—Å: {enrollment.payment_status}\n\n"
                    f"üìÑ –§–æ—Ä–º–∞: –ó–∞–ø–∏—Å—å\n"
                    f"üóì –î–∞—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ PST: {created_at_pst}")
            await message.answer(text=text)


@common_router.message(Command("mini_courses"))
async def mini_courses(message: Message):
    is_admin = str(message.chat.id) in config.ADMIN_CHAT_IDS
    if is_admin:
        await message.bot.send_chat_action(chat_id=message.chat.id, action=constants.ChatAction.TYPING)

        list_of_mini_courses = await get_mini_courses()
        for mini_course in list_of_mini_courses:
            created_at_pst = (mini_course.created_date
                              .astimezone(pytz.timezone('America/Los_Angeles'))
                              .strftime('%d.%m.%Y %H:%M'))
            text = (f"#mini_course\n\n"
                    f"üöÄ <b>–ö–ª–∏–µ–Ω—Ç –Ω–∞ –º–∏–Ω–∏-–∫—É—Ä—Å–µ!</b>\n\n"
                    f"‚ÑπÔ∏è ID: {mini_course.id}\n"
                    f"üë§ –ò–º—è: {mini_course.name}\n"
                    f"üìß –ü–æ—á—Ç–∞: {mini_course.email}\n"
                    f"‚úàÔ∏è –¢–µ–ª–µ–≥—Ä–∞–º: {mini_course.telegram if mini_course.telegram else '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
                    f"üí± –ú–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã: {'PayPal' if mini_course.payment_method == PaymentMethod.PAYPAL else '–ÆKassa'}\n"
                    f"üí∏ –°—É–º–º–∞: {mini_course.amount}{'$' if mini_course.payment_method == PaymentMethod.PAYPAL else '‚ÇΩ'}\n"
                    f"ü§ë –ß–∏—Å—Ç–∞—è —Å—É–º–º–∞: {mini_course.income_amount}‚ÇΩ\n"
                    f"üëÅ –°—Ç–∞—Ç—É—Å: {mini_course.payment_status}\n\n"
                    f"üìÑ –§–æ—Ä–º–∞: –ó–∞–ø–∏—Å—å\n"
                    f"üóì –î–∞—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ PST: {created_at_pst}")
            await message.answer(text=text)
